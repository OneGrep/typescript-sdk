openapi: 3.1.0
info:
  title: OneGrep API
  description: OneGrep's core API service
  version: 0.0.1
servers:
  - url: http://localhost:8080
    description: Local
  - url: http://localhost:8080
    description: Docker
  - url: https://test-sandbox.onegrep.dev
    description: test-sandbox
  - url: https://api.onegrep.dev
    description: Production
paths:
  /health:
    get:
      summary: Health
      description: Generic healthcheck endpoint to ensure the service is running.
      operationId: health_health_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /api/v1/account/auth/status:
    get:
      tags:
        - account
      summary: Get Auth Status
      description: >-
        Returns the authentications state of the caller. Will read their API Key
        or JWT and then determine

        if a OneGrep account exists. If yes, then it will be considered
        authenticated.


        # ! NOTE: The User may have a valid JWT but if they do not have a
        OneGrep account, they will not be considered authenticated.
      operationId: get_auth_status_api_v1_account_auth_status_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationStatus'
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
  /api/v1/account/api-key:
    get:
      tags:
        - account
      summary: Get Api Key
      description: Returns the API key information for the authenticated user.
      operationId: get_api_key_api_v1_account_api_key_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccount'
      security:
        - HTTPBearer: []
  /api/v1/account/:
    get:
      tags:
        - account
      summary: Get Account Information
      operationId: get_account_information_api_v1_account__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountInformation'
      security:
        - HTTPBearer: []
    post:
      tags:
        - account
      summary: Create Account
      description: >-
        Creates a new account for the authenticated user with an API key and
        organization.
      operationId: create_account_api_v1_account__post
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountInformation'
      security:
        - HTTPBearer: []
    delete:
      tags:
        - account
      summary: Delete Account
      operationId: delete_account_api_v1_account__delete
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: boolean
                title: Response Delete Account Api V1 Account  Delete
      security:
        - HTTPBearer: []
  /api/v1/account/invitation-code:
    post:
      tags:
        - account
      summary: Create Account By Invitation
      description: >-
        Creates a new account given an authenticated user and a valid invitation
        code.
      operationId: create_account_by_invitation_api_v1_account_invitation_code_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreateRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountInformation'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /api/v1/integrations/:
    get:
      tags:
        - integrations
      summary: List Integrations
      description: >-
        Lists all available integrations for a user's organization.

        If active is true, only returns integrations that have an active tool
        server.
      operationId: list_integrations_api_v1_integrations__get
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: active
          in: query
          required: false
          schema:
            type: boolean
            default: false
            title: Active
        - name: X-ONEGREP-PROFILE-ID
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: X-Onegrep-Profile-Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IntegrationConfigDetails'
                title: Response List Integrations Api V1 Integrations  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/integrations/{integration_name}/tools:
    get:
      tags:
        - integrations
      summary: Get Integration Tools
      description: Returns details for a tool in an integration available to a user.
      operationId: get_integration_tools_api_v1_integrations__integration_name__tools_get
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: integration_name
          in: path
          required: true
          schema:
            type: string
            title: Integration Name
        - name: X-ONEGREP-PROFILE-ID
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: X-Onegrep-Profile-Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ToolResource'
                title: >-
                  Response Get Integration Tools Api V1 Integrations 
                  Integration Name  Tools Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/integrations/{integration_name}/tools/{tool_name}:
    get:
      tags:
        - integrations
      summary: Get Tool Details
      description: Returns the details for a tool in an integration.
      operationId: >-
        get_tool_details_api_v1_integrations__integration_name__tools__tool_name__get
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: integration_name
          in: path
          required: true
          schema:
            type: string
            title: Integration Name
        - name: tool_name
          in: path
          required: true
          schema:
            type: string
            title: Tool Name
        - name: X-ONEGREP-PROFILE-ID
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: X-Onegrep-Profile-Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolResource'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/integrations/{integration_name}/tools/{tool_name}/custom/tags:
    post:
      tags:
        - integrations
      summary: Upsert Tool Custom Tags
      description: >-
        Upserts custom tags for a tool in an integration. Will not delete any
        existing tags but will update any

        overlapping tags that are already set.
      operationId: >-
        upsert_tool_custom_tags_api_v1_integrations__integration_name__tools__tool_name__custom_tags_post
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: integration_name
          in: path
          required: true
          schema:
            type: string
            title: Integration Name
        - name: tool_name
          in: path
          required: true
          schema:
            type: string
            title: Tool Name
        - name: X-ONEGREP-PROFILE-ID
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: X-Onegrep-Profile-Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToolCustomTagsParamsRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolResource'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - integrations
      summary: Delete Tool Custom Tags
      description: Deletes custom tags for a tool in an integration.
      operationId: >-
        delete_tool_custom_tags_api_v1_integrations__integration_name__tools__tool_name__custom_tags_delete
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: integration_name
          in: path
          required: true
          schema:
            type: string
            title: Integration Name
        - name: tool_name
          in: path
          required: true
          schema:
            type: string
            title: Tool Name
        - name: X-ONEGREP-PROFILE-ID
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: X-Onegrep-Profile-Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToolCustomTagSelectionParamsRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolResource'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/integrations/{integration_name}/tools/custom/tags:
    post:
      tags:
        - integrations
      summary: Upsert Multiple Tool Custom Tags
      description: Upserts custom tags for multiple tools in an integration.
      operationId: >-
        upsert_multiple_tool_custom_tags_api_v1_integrations__integration_name__tools_custom_tags_post
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: integration_name
          in: path
          required: true
          schema:
            type: string
            title: Integration Name
        - name: X-ONEGREP-PROFILE-ID
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: X-Onegrep-Profile-Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleToolCustomTagsParamsRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ToolResource'
                title: >-
                  Response Upsert Multiple Tool Custom Tags Api V1 Integrations 
                  Integration Name  Tools Custom Tags Post
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/policies/:
    get:
      tags:
        - policies
      summary: Get All Policies
      operationId: get_all_policies_api_v1_policies__get
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: skip
          in: query
          required: false
          schema:
            type: integer
            default: 0
            title: Skip
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 100
            title: Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Policy'
                title: Response Get All Policies Api V1 Policies  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - policies
      summary: Create Policy
      operationId: create_policy_api_v1_policies__post
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: X-ONEGREP-PROFILE-ID
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: X-Onegrep-Profile-Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPolicyRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/policies/approvals:
    get:
      tags:
        - policies
      summary: Get Approval Requests
      description: >-
        Get all approval requests visible to the user with their associated
        policies and resource details.
      operationId: get_approval_requests_api_v1_policies_approvals_get
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 0
            title: Page
        - name: page_size
          in: query
          required: false
          schema:
            type: integer
            default: 100
            title: Page Size
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApprovalAndPolicy'
                title: Response Get Approval Requests Api V1 Policies Approvals Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/policies/{policy_id}:
    get:
      tags:
        - policies
      summary: Get Policy
      operationId: get_policy_api_v1_policies__policy_id__get
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: policy_id
          in: path
          required: true
          schema:
            type: string
            title: Policy Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - policies
      summary: Update Policy
      operationId: update_policy_api_v1_policies__policy_id__put
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: policy_id
          in: path
          required: true
          schema:
            type: string
            title: Policy Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              title: Update Data
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/policies/resources/{resource_name}/approval:
    get:
      tags:
        - policies
      summary: Check Resource For Approval
      description: >-
        Checks the policy that is associated with a resource if it requires
        approval, if yes, this will create an approval request. If the policy
        indicates that

        it does require approval, this will wait for the user to approve or
        reject the request before returning back the final

        response and HTTP CODE. 200 = approved or didn't require approval, 403 =
        rejected by the user.
      operationId: >-
        check_resource_for_approval_api_v1_policies_resources__resource_name__approval_get
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: resource_name
          in: path
          required: true
          schema:
            type: string
            title: Resource Name
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/policies/resources/check:
    get:
      tags:
        - policies
      summary: Check Resource Access Get
      operationId: check_resource_access_get_api_v1_policies_resources_check_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyCheckResult'
    post:
      tags:
        - policies
      summary: Check Resource Access
      description: Generic endpoint to check resource access.
      operationId: check_resource_access_api_v1_policies_resources_check_post
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: X-ONEGREP-PROFILE-ID
          in: header
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            title: X-Onegrep-Profile-Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyCheckResult'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/policies/{policy_id}/{audit_id}/status:
    post:
      tags:
        - policies
      summary: Check Policy Status
      operationId: check_policy_status_api_v1_policies__policy_id___audit_id__status_post
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: policy_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Policy Id
        - name: audit_id
          in: path
          required: true
          schema:
            type: integer
            title: Audit Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/audit/:
    get:
      tags:
        - audit
      summary: Get Audit Logs
      description: |-
        Gets audit logs visible to the user with pagination and filtering.

        - Page numbers start at 1 (not 0)
        - Results are sorted by timestamp (newest first)
        - Optional filters can be applied for policy_id, action, and date range
      operationId: get_audit_logs_api_v1_audit__get
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            description: Page number (1-indexed)
            default: 1
            title: Page
          description: Page number (1-indexed)
        - name: page_size
          in: query
          required: false
          schema:
            type: integer
            maximum: 500
            minimum: 1
            description: Items per page
            default: 100
            title: Page Size
          description: Items per page
        - name: policy_id
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Filter by policy ID
            title: Policy Id
          description: Filter by policy ID
        - name: action
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: 'null'
            description: Filter by action type
            title: Action
          description: Filter by action type
        - name: start_date
          in: query
          required: false
          schema:
            anyOf:
              - type: string
                format: date-time
              - type: 'null'
            description: Filter logs after this date (ISO format)
            title: Start Date
          description: Filter logs after this date (ISO format)
        - name: end_date
          in: query
          required: false
          schema:
            anyOf:
              - type: string
                format: date-time
              - type: 'null'
            description: Filter logs before this date (ISO format)
            title: End Date
          description: Filter logs before this date (ISO format)
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponse_AuditLog_'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/clients/meta:
    get:
      tags:
        - clients
      summary: Get Meta Client
      description: Gets the remote client config for the meta server.
      operationId: get_meta_client_api_v1_clients_meta_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteClientConfig'
      deprecated: true
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
  /api/v1/clients/hosts:
    get:
      tags:
        - clients
      summary: Get Hosts Clients
      description: Gets all the remote client configs for the host servers.
      operationId: get_hosts_clients_api_v1_clients_hosts_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RemoteClientConfig'
                type: array
                title: Response Get Hosts Clients Api V1 Clients Hosts Get
      deprecated: true
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
components:
  schemas:
    AccessPolicyType:
      type: string
      enum:
        - ALWAYS
        - NEVER
        - REQUIRES_PERMISSION
      title: AccessPolicyType
      description: Enum for access policy types
    AccountCreateRequest:
      properties:
        invitation_code:
          type: string
          title: Invitation Code
        email:
          type: string
          title: Email
      type: object
      required:
        - invitation_code
        - email
      title: AccountCreateRequest
    AccountInformation:
      properties:
        user_id:
          type: string
          title: User Id
        account:
          $ref: '#/components/schemas/UserAccount'
        organization:
          $ref: '#/components/schemas/Organization'
      type: object
      required:
        - user_id
        - account
        - organization
      title: AccountInformation
      description: Model for storing account information
    ActionApprovalRequest:
      properties:
        id:
          anyOf:
            - type: integer
            - type: 'null'
          title: Id
        policy_id:
          type: string
          format: uuid
          title: Policy Id
        state:
          $ref: '#/components/schemas/ActionApprovalState'
          default: pending
        created_at:
          type: string
          format: date-time
          title: Created At
        last_updated_at:
          type: string
          format: date-time
          title: Last Updated At
        updated_by_user_id:
          type: string
          title: Updated By User Id
        payload:
          anyOf:
            - type: object
            - type: 'null'
          title: Payload
      type: object
      required:
        - id
        - policy_id
        - updated_by_user_id
      title: ActionApprovalRequest
      description: >-
        Model that holds the state of a request for an action to be taken with
        respect to a policy.

        Ex. if the policy is set to require approval, then we will have a
        request for approval.
    ActionApprovalState:
      type: string
      enum:
        - pending
        - approved
        - rejected
      title: ActionApprovalState
      description: Enum for policy approval states
    ApprovalAndPolicy:
      properties:
        approval:
          $ref: '#/components/schemas/ActionApprovalRequest'
        policy:
          $ref: '#/components/schemas/Policy'
        canonical_resource_name:
          type: string
          title: Canonical Resource Name
        integration_name:
          type: string
          title: Integration Name
        tool_name:
          type: string
          title: Tool Name
      type: object
      required:
        - approval
        - policy
        - canonical_resource_name
        - integration_name
        - tool_name
      title: ApprovalAndPolicy
      description: Approval and policy
    AuditLog:
      properties:
        id:
          anyOf:
            - type: integer
            - type: 'null'
          title: Id
        policy_id:
          type: string
          format: uuid
          title: Policy Id
        action:
          type: string
          title: Action
        details:
          type: object
          title: Details
        performed_by:
          type: string
          title: Performed By
          default: system
        timestamp:
          type: string
          format: date-time
          title: Timestamp
      type: object
      required:
        - policy_id
        - action
      title: AuditLog
      description: Model for audit logging
    AuthenticationMethod:
      type: string
      enum:
        - propelauth
        - api_key
      title: AuthenticationMethod
    AuthenticationStatus:
      properties:
        credentials_provided:
          type: boolean
          title: Credentials Provided
        method:
          anyOf:
            - $ref: '#/components/schemas/AuthenticationMethod'
            - type: 'null'
        user_id:
          anyOf:
            - type: string
            - type: 'null'
          title: User Id
        is_authenticated:
          type: boolean
          title: Is Authenticated
      type: object
      required:
        - credentials_provided
        - is_authenticated
      title: AuthenticationStatus
    BlaxelToolServerClient:
      properties:
        client_type:
          type: string
          const: blaxel
          title: Client Type
        blaxel_workspace:
          type: string
          title: Blaxel Workspace
        blaxel_function:
          type: string
          title: Blaxel Function
      type: object
      required:
        - client_type
        - blaxel_workspace
        - blaxel_function
      title: BlaxelToolServerClient
      description: A client for a tool server that is a blaxel server.
    CanonicalResource:
      properties:
        org_id:
          type: string
          title: Org Id
        profile_id:
          type: string
          title: Profile Id
        server_name:
          type: string
          title: Server Name
        event_name:
          type: string
          title: Event Name
      type: object
      required:
        - org_id
        - profile_id
        - server_name
        - event_name
      title: CanonicalResource
      description: Represents a canonical resource name in object form.
    CreateInvitationRequest:
      properties:
        email:
          type: string
          format: email
          title: Email
        org_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Org Id
        expires_in_days:
          type: integer
          title: Expires In Days
          default: 7
      type: object
      required:
        - email
      title: CreateInvitationRequest
      description: Request model for creating an invitation
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    IngressConfig:
      properties:
        entryPoints:
          items:
            type: string
          type: array
          title: Entrypoints
        proxyDomain:
          type: string
          title: Proxydomain
        orgID:
          type: string
          title: Orgid
        orgRouteStrategy:
          type: string
          enum:
            - PathPrefix
            - Header
          title: Orgroutestrategy
          default: PathPrefix
        serverID:
          type: string
          title: Serverid
        serverRouteStrategy:
          type: string
          enum:
            - PathPrefix
            - Header
          title: Serverroutestrategy
          default: Header
        serverIsDefault:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Serverisdefault
          default: false
        gatewayScheme:
          type: string
          title: Gatewayscheme
          default: http
      type: object
      required:
        - proxyDomain
        - orgID
        - serverID
      title: IngressConfig
    IntegrationAuthScheme:
      type: string
      enum:
        - token
        - oauth_1_0
        - oauth_2_0
      title: IntegrationAuthScheme
      description: Authentication schemes supported by server templates.
    IntegrationConfigDetails:
      properties:
        name:
          type: string
          title: Name
        configuration_state:
          $ref: '#/components/schemas/IntegrationConfigurationState'
        template:
          $ref: '#/components/schemas/IntegrationTemplate'
      type: object
      required:
        - name
        - configuration_state
        - template
      title: IntegrationConfigDetails
      description: >-
        General details about an integration. Meant to be surfaceable to a
        client.
    IntegrationConfigurationState:
      type: string
      enum:
        - agent_local
        - cloud_hosted_available
        - cloud_hosted_configured
      title: IntegrationConfigurationState
      description: >-
        The state of an integration from an account perspective (not runtime).

        To determine the runtime state, we will have to check the server
        configuration for

        the integration separately depending on our infrastucture selection.
    IntegrationDefaultPolicies:
      properties:
        tools:
          items:
            $ref: '#/components/schemas/PolicyAccessRule'
          type: array
          title: Tools
          description: Policies for tools in this integration.
      type: object
      required:
        - tools
      title: IntegrationDefaultPolicies
      description: Default policies for an integration.
    IntegrationOAuthAuthorizer:
      type: string
      enum:
        - google
        - meta
      title: IntegrationOAuthAuthorizer
    IntegrationSecret:
      properties:
        name:
          type: string
          title: Name
        generation_link:
          anyOf:
            - type: string
            - type: 'null'
          title: Generation Link
        value:
          anyOf:
            - type: string
            - type: 'null'
          title: Value
      type: object
      required:
        - name
      title: IntegrationSecret
      description: Represents a secret required by a server template.
    IntegrationTemplate:
      properties:
        version:
          type: string
          title: Version
          description: The version of the integration template.
        name:
          type: string
          title: Name
        repository:
          type: string
          title: Repository
        sha:
          type: string
          title: Sha
        auth_scheme:
          anyOf:
            - $ref: '#/components/schemas/IntegrationAuthScheme'
            - type: 'null'
        oauth_authorizer:
          anyOf:
            - $ref: '#/components/schemas/IntegrationOAuthAuthorizer'
            - type: 'null'
        args:
          oneOf:
            - $ref: '#/components/schemas/MCPIntegrationArgs'
          title: Args
          discriminator:
            propertyName: type
            mapping:
              mcp: '#/components/schemas/MCPIntegrationArgs'
        secrets:
          anyOf:
            - items:
                $ref: '#/components/schemas/IntegrationSecret'
              type: array
            - type: 'null'
          title: Secrets
        default_policies:
          $ref: '#/components/schemas/IntegrationDefaultPolicies'
      type: object
      required:
        - version
        - name
        - repository
        - sha
        - args
        - default_policies
      title: IntegrationTemplate
      description: >-
        Class representation of the server templates that we support. This
        matches the structure

        of server templates under resources/integrations/templates/*
    Invitation:
      properties:
        code:
          type: string
          title: Code
        org_id:
          type: string
          title: Org Id
        email:
          type: string
          format: email
          title: Email
        created_at:
          type: string
          format: date-time
          title: Created At
        expires_at:
          type: string
          format: date-time
          title: Expires At
        accepted:
          type: boolean
          title: Accepted
          default: false
        accepted_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Accepted At
      type: object
      required:
        - org_id
        - email
      title: Invitation
      description: Represents an invitation to join an organization.
    KindMetadata:
      type: object
    LauncherConfig:
      properties:
        configMapName:
          type: string
          title: Configmapname
        mountPath:
          type: string
          title: Mountpath
      type: object
      required:
        - configMapName
        - mountPath
      title: LauncherConfig
    MCPIntegrationArgs:
      properties:
        type:
          type: string
          const: mcp
          title: Type
        command:
          type: string
          title: Command
        args:
          anyOf:
            - items:
                type: string
              type: array
            - type: 'null'
          title: Args
      type: object
      required:
        - type
        - command
      title: MCPIntegrationArgs
      description: >-
        Arguments specifically for an integration that is powered by an MCP
        server.
    MCPServerConfig:
      properties:
        name:
          type: string
          title: Name
        image:
          type: string
          title: Image
          default: registry.onegrep.dev/onegrep/mcp-host:latest
        git_repo_url:
          anyOf:
            - type: string
            - type: 'null'
          title: Git Repo Url
        git_branch:
          anyOf:
            - type: string
            - type: 'null'
          title: Git Branch
          default: main
        command:
          type: string
          title: Command
        args:
          items:
            type: string
          type: array
          title: Args
        env_vars:
          additionalProperties:
            type: string
          type: object
          title: Env Vars
      type: object
      required:
        - name
        - command
        - args
        - env_vars
      title: MCPServerConfig
    MCPToolServerClient:
      properties:
        client_type:
          type: string
          const: mcp
          title: Client Type
        transport_type:
          type: string
          enum:
            - sse
            - websocket
          title: Transport Type
        url:
          type: string
          minLength: 1
          format: uri
          title: Url
      type: object
      required:
        - client_type
        - transport_type
        - url
      title: MCPToolServerClient
      description: A client for a tool server that is a direct MCP server connection.
    MultipleToolCustomTagsParamsRequest:
      properties:
        tool_names:
          items:
            type: string
          type: array
          title: Tool Names
        tags:
          type: object
          title: Tags
      type: object
      required:
        - tool_names
        - tags
      title: MultipleToolCustomTagsParamsRequest
      description: Params to change the tags for multiple tools in an integration.
    NewPolicyRequest:
      properties:
        integration_name:
          type: string
          title: Integration Name
        event_name:
          type: string
          title: Event Name
        access_policy:
          $ref: '#/components/schemas/AccessPolicyType'
      type: object
      required:
        - integration_name
        - event_name
        - access_policy
      title: NewPolicyRequest
      description: >-
        Model to create a new policy. Other policy fields are derived from the
        default policy for the

        integration/event
    NewUserRecipeRequest:
      properties:
        goal:
          type: string
          title: Goal
          description: The goal that this recipe is helping an agent achieve.
        details:
          $ref: '#/components/schemas/RecipeDetails-Input'
          description: The details for this recipe.
      type: object
      required:
        - goal
        - details
      title: NewUserRecipeRequest
      description: Model to create a new user recipe.
    Organization:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          title: Id
        owner_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Owner Id
        created_by_user_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Created By User Id
      type: object
      required:
        - id
      title: Organization
    PaginatedResponse_AuditLog_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/AuditLog'
          type: array
          title: Items
        pagination:
          $ref: '#/components/schemas/PaginationMetadata'
      type: object
      required:
        - items
        - pagination
      title: PaginatedResponse[AuditLog]
    PaginatedResponse_UserRecipe_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/UserRecipe'
          type: array
          title: Items
        pagination:
          $ref: '#/components/schemas/PaginationMetadata'
      type: object
      required:
        - items
        - pagination
      title: PaginatedResponse[UserRecipe]
    PaginationMetadata:
      properties:
        page:
          type: integer
          title: Page
        page_size:
          type: integer
          title: Page Size
        total:
          type: integer
          title: Total
        pages:
          type: integer
          title: Pages
        has_next:
          type: boolean
          title: Has Next
        has_prev:
          type: boolean
          title: Has Prev
      type: object
      required:
        - page
        - page_size
        - total
        - pages
        - has_next
        - has_prev
      title: PaginationMetadata
      description: Metadata for paginated results
    Policy:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        event_name:
          type: string
          title: Event Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        access_policy:
          $ref: '#/components/schemas/AccessPolicyType'
        organization_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Organization Id
        canonical_resource_name:
          type: string
          title: Canonical Resource Name
        id:
          type: string
          format: uuid
          title: Id
      type: object
      required:
        - event_name
        - access_policy
        - canonical_resource_name
      title: Policy
      description: Policy model that works with both SQL and in-memory storage
    PolicyAccessRule:
      properties:
        event_name:
          type: string
          title: Event Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        access_policy:
          $ref: '#/components/schemas/AccessPolicyType'
      type: object
      required:
        - event_name
        - access_policy
      title: PolicyAccessRule
      description: Policy template that is used to create a policy.
    PolicyBase:
      properties:
        event_name:
          type: string
          title: Event Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        access_policy:
          $ref: '#/components/schemas/AccessPolicyType'
        organization_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Organization Id
        canonical_resource_name:
          type: string
          title: Canonical Resource Name
      type: object
      required:
        - event_name
        - access_policy
        - canonical_resource_name
      title: PolicyBase
      description: Base model with shared policy fields
    PolicyCheckResult:
      properties:
        approved:
          type: boolean
          title: Approved
      type: object
      required:
        - approved
      title: PolicyCheckResult
      description: Result of a policy check
    Recipe:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        goal:
          type: string
          title: Goal
          description: The goal that this recipe is helping an agent achieve.
        instructions:
          anyOf:
            - type: string
            - type: 'null'
          title: Instructions
          description: The instructions for this recipe.
        id:
          type: string
          format: uuid
          title: Id
        tools:
          items:
            $ref: '#/components/schemas/Tool'
          type: array
          title: Tools
          readOnly: true
      type: object
      required:
        - goal
        - instructions
        - tools
      title: Recipe
      description: A recipe.
    RecipeDetails-Input:
      properties:
        tools:
          items:
            $ref: '#/components/schemas/RecipeTool'
          type: array
          title: Tools
          description: An unsorted list of tools that would be used in this recipe.
          default: []
      type: object
      title: RecipeDetails
      description: >-
        Details about a recipe. This is an unordered list of tools that are used
        in the recipe.
    RecipeDetails-Output:
      properties:
        tools:
          items:
            $ref: '#/components/schemas/RecipeTool'
          type: array
          title: Tools
          description: An unsorted list of tools that would be used in this recipe.
          default: []
      type: object
      title: RecipeDetails
      description: >-
        Details about a recipe. This is an unordered list of tools that are used
        in the recipe.
    RecipeTool:
      properties:
        tool_resource:
          $ref: '#/components/schemas/ToolResourceBase'
          description: A reference to the tool that is used in this recipe.
        usage_instructions:
          anyOf:
            - type: string
            - type: 'null'
          title: Usage Instructions
          description: >-
            A more in-depth description of this tool and what it should be used
            for in the context of this recipe.
      type: object
      required:
        - tool_resource
      title: RecipeTool
      description: A reference to a tool that is used in a recipe.
    RemoteClientConfig:
      properties:
        org_id:
          type: string
          title: Org Id
          example: org-123
        name:
          type: string
          title: Name
          example: my-server
        display_name:
          type: string
          title: Display Name
          example: My Server
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
          example: My Server Description
        ready:
          type: boolean
          title: Ready
          default: false
          example: true
        endpoint:
          type: string
          title: Endpoint
          example: https://gateway.onegrep.dev
        required_headers:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: 'null'
          title: Required Headers
          example:
            X-MCP-MC: my-server
      type: object
      required:
        - org_id
        - name
        - display_name
      title: RemoteClientConfig
    ScoredItem_Recipe_:
      properties:
        item:
          $ref: '#/components/schemas/Recipe'
          description: The item that was scored.
        score:
          type: number
          maximum: 1
          minimum: 0
          title: Score
          description: The score of the item [0, 1].
      type: object
      required:
        - item
        - score
      title: ScoredItem[Recipe]
    ScoredItem_Tool_:
      properties:
        item:
          $ref: '#/components/schemas/Tool'
          description: The item that was scored.
        score:
          type: number
          maximum: 1
          minimum: 0
          title: Score
          description: The score of the item [0, 1].
      type: object
      required:
        - item
        - score
      title: ScoredItem[Tool]
    SearchRequest:
      properties:
        query:
          type: string
          title: Query
          description: The query used against the search index.
        k:
          type: integer
          title: K
          description: The number of results to return from index.
          default: 10
        min_score:
          type: number
          title: Min Score
          description: The minimum score to return from index.
          default: 0
        page_size:
          type: integer
          title: Page Size
          description: The number of results per page.
          default: 10
        page:
          type: integer
          title: Page
          description: The page number to return.
          default: 0
      type: object
      required:
        - query
      title: SearchRequest
      description: A request for a search.
    SearchResponse_ScoredItem_Recipe__:
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetadata'
        results:
          items:
            $ref: '#/components/schemas/ScoredItem_Recipe_'
          type: array
          title: Results
      type: object
      required:
        - pagination
        - results
      title: SearchResponse[ScoredItem[Recipe]]
    SearchResponse_ScoredItem_Tool__:
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMetadata'
        results:
          items:
            $ref: '#/components/schemas/ScoredItem_Tool_'
          type: array
          title: Results
      type: object
      required:
        - pagination
        - results
      title: SearchResponse[ScoredItem[Tool]]
    Server:
      properties:
        kind:
          type: string
          const: Server
          title: Kind
          default: Server
        metadata:
          $ref: '#/components/schemas/KindMetadata'
        spec:
          $ref: '#/components/schemas/ServerSpec'
        status:
          anyOf:
            - type: object
            - type: 'null'
          title: Status
        apiVersion:
          type: string
          title: Apiversion
          readOnly: true
      additionalProperties: true
      type: object
      required:
        - metadata
        - spec
        - apiVersion
      title: Server
    ServerSpec:
      properties:
        orgID:
          type: string
          title: Orgid
        image:
          type: string
          title: Image
        pullPolicy:
          type: string
          title: Pullpolicy
          default: IfNotPresent
        port:
          type: integer
          title: Port
          default: 8000
        displayName:
          anyOf:
            - type: string
            - type: 'null'
          title: Displayname
        envFromSources:
          anyOf:
            - items:
                type: object
              type: array
            - type: 'null'
          title: Envfromsources
        volumes:
          anyOf:
            - items:
                type: object
              type: array
            - type: 'null'
          title: Volumes
        volumeMounts:
          anyOf:
            - items:
                type: object
              type: array
            - type: 'null'
          title: Volumemounts
        launcherConfig:
          anyOf:
            - $ref: '#/components/schemas/LauncherConfig'
            - type: 'null'
        ingressConfig:
          anyOf:
            - $ref: '#/components/schemas/IngressConfig'
            - type: 'null'
      type: object
      required:
        - orgID
        - image
      title: ServerSpec
    Strategy:
      properties:
        recipe_id:
          type: string
          format: uuid
          title: Recipe Id
          description: The ID of the recipe that was used to generate the strategy.
        instructions:
          type: string
          title: Instructions
          description: Instructions to follow the strategy.
        tools:
          items:
            $ref: '#/components/schemas/ToolResource'
          type: array
          title: Tools
          description: >-
            List of one or more fully-hydrated tool resources that should be
            used in the strategy to achieve the goal.
      type: object
      required:
        - recipe_id
        - instructions
        - tools
      title: Strategy
      description: A model representing a result for a goal-based search.
    Tool:
      properties:
        server_id:
          type: string
          format: uuid
          title: Server Id
        name:
          type: string
          title: Name
          description: The name of the tool (should be unique within a server).
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
          description: A description of the tool.
        icon_url:
          anyOf:
            - type: string
              minLength: 1
              format: uri
            - type: 'null'
          title: Icon Url
          description: A URL to an icon for the tool.
        input_schema:
          anyOf:
            - type: object
            - type: boolean
          title: Input Schema
          description: A JSON schema for the tool's input (defaults to 'always valid').
          default: true
        id:
          type: string
          format: uuid
          title: Id
      type: object
      required:
        - server_id
        - name
        - id
      title: Tool
      description: A tool.
    ToolCustomTagSelectionParamsRequest:
      properties:
        integration_name:
          type: string
          title: Integration Name
        tool_name:
          type: string
          title: Tool Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        tags:
          items:
            type: string
          type: array
          title: Tags
      type: object
      required:
        - integration_name
        - tool_name
        - tags
      title: ToolCustomTagSelectionParamsRequest
      description: >-
        Params that generalize the selection the tags for a tool in an
        integration.
    ToolCustomTagsParamsRequest:
      properties:
        integration_name:
          type: string
          title: Integration Name
        tool_name:
          type: string
          title: Tool Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        tags:
          type: object
          title: Tags
      type: object
      required:
        - integration_name
        - tool_name
        - tags
      title: ToolCustomTagsParamsRequest
      description: >-
        Params to change the tags for a tool in an integration. Will upsert any
        tags that already

        exist. Will not delete any other tags. This is only net additive.
    ToolProperties:
      properties:
        tags:
          type: object
          title: Tags
      type: object
      required:
        - tags
      title: ToolProperties
      description: Properties for a tool.
    ToolResource:
      properties:
        integration_name:
          type: string
          title: Integration Name
        tool_name:
          type: string
          title: Tool Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        id:
          type: string
          title: Id
        tool:
          $ref: '#/components/schemas/Tool'
        org_id:
          type: string
          title: Org Id
        profile_id:
          type: string
          title: Profile Id
        policy:
          $ref: '#/components/schemas/PolicyBase'
        properties:
          $ref: '#/components/schemas/ToolProperties'
        server:
          $ref: '#/components/schemas/ToolServer'
          readOnly: true
        provider:
          $ref: '#/components/schemas/ToolServerProvider'
          readOnly: true
        canonical_resource:
          $ref: '#/components/schemas/CanonicalResource'
          readOnly: true
      type: object
      required:
        - integration_name
        - tool_name
        - id
        - tool
        - org_id
        - profile_id
        - policy
        - properties
        - server
        - provider
        - canonical_resource
      title: ToolResource
      description: A broad summary of details about a tool akin to a ToolResource.
    ToolResourceBase:
      properties:
        integration_name:
          type: string
          title: Integration Name
        tool_name:
          type: string
          title: Tool Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
      type: object
      required:
        - integration_name
        - tool_name
      title: ToolResourceBase
      description: Identification details about a tool in an integration.
    ToolServer:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        provider_id:
          type: string
          format: uuid
          title: Provider Id
        name:
          type: string
          title: Name
      type: object
      required:
        - id
        - provider_id
        - name
      title: ToolServer
    ToolServerProvider:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        name:
          type: string
          title: Name
      type: object
      required:
        - id
        - name
      title: ToolServerProvider
    TraefikIngressRoute:
      properties:
        kind:
          type: string
          const: IngressRoute
          title: Kind
          default: IngressRoute
        metadata:
          $ref: '#/components/schemas/KindMetadata'
        spec:
          $ref: '#/components/schemas/IngressConfig'
        status:
          type: object
          title: Status
        apiVersion:
          type: string
          title: Apiversion
          readOnly: true
      additionalProperties: true
      type: object
      required:
        - metadata
        - spec
        - status
        - apiVersion
      title: TraefikIngressRoute
    UserAccount:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          title: Id
        belongs_to_organization_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Belongs To Organization Id
        api_key:
          type: string
          title: Api Key
      type: object
      required:
        - id
        - api_key
      title: UserAccount
      description: Model for storing user information including their API key
    UserRecipe:
      properties:
        id:
          type: integer
          title: Id
        goal:
          type: string
          title: Goal
          description: The goal that this recipe is helping an agent achieve.
        details:
          type: object
          title: Details
        org_id:
          type: string
          title: Org Id
          description: The organization ID that owns this recipe
        profile_id:
          type: string
          title: Profile Id
          description: The profile ID within the organization that owns this recipe
        created_at:
          type: string
          format: date-time
          title: Created At
        details_data:
          $ref: '#/components/schemas/RecipeDetails-Output'
          description: Returns the details as a RecipeDetails object.
          readOnly: true
      type: object
      required:
        - id
        - goal
        - org_id
        - profile_id
        - details_data
      title: UserRecipe
      description: A user recipe.
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError
  securitySchemes:
    APIKeyHeader:
      type: apiKey
      in: header
      name: X-ONEGREP-API-KEY
    HTTPBearer:
      type: http
      scheme: bearer
