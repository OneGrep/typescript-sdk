openapi: 3.1.0
info:
  title: OneGrep API
  description: OneGrep's core API service
  version: 0.0.1
servers:
  - url: http://localhost:8000
    description: Local
  - url: https://api.onegrep.dev
    description: Production
paths:
  /health:
    get:
      summary: Health
      description: Generic healthcheck endpoint to ensure the service is running.
      operationId: health_health_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /api/v1/audit/:
    get:
      tags:
        - audit
      summary: Get Audit Logs
      description: Gets all the audit logs visible to the user.
      operationId: get_audit_logs_api_v1_audit__get
      security:
        - HTTPBearer: []
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 0
            title: Page
        - name: page_size
          in: query
          required: false
          schema:
            type: integer
            default: 100
            title: Page Size
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditLog'
                title: Response Get Audit Logs Api V1 Audit  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/clients/meta:
    get:
      tags:
        - clients
      summary: Get Meta Client
      description: Gets the remote client config for the meta server.
      operationId: get_meta_client_api_v1_clients_meta_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteClientConfig'
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
  /api/v1/clients/hosts:
    get:
      tags:
        - clients
      summary: Get Hosts Clients
      description: Gets all the remote client configs for the host servers.
      operationId: get_hosts_clients_api_v1_clients_hosts_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RemoteClientConfig'
                type: array
                title: Response Get Hosts Clients Api V1 Clients Hosts Get
      security:
        - APIKeyHeader: []
        - HTTPBearer: []
components:
  schemas:
    AccessPolicyType:
      type: string
      enum:
        - ALWAYS
        - NEVER
        - REQUIRES_PERMISSION
      title: AccessPolicyType
      description: Enum for access policy types
    AccountInformation:
      properties:
        user_id:
          type: string
          title: User Id
        account:
          $ref: '#/components/schemas/UserAccount'
        organization:
          $ref: '#/components/schemas/Organization'
      type: object
      required:
        - user_id
        - account
        - organization
      title: AccountInformation
      description: Model for storing account information
    ActionApprovalRequest:
      properties:
        id:
          anyOf:
            - type: integer
            - type: 'null'
          title: Id
        policy_id:
          type: integer
          title: Policy Id
        state:
          $ref: '#/components/schemas/ActionApprovalState'
          default: pending
        created_at:
          type: string
          format: date-time
          title: Created At
        last_updated_at:
          type: string
          format: date-time
          title: Last Updated At
        updated_by_user_id:
          type: string
          title: Updated By User Id
        payload:
          anyOf:
            - type: object
            - type: 'null'
          title: Payload
      type: object
      required:
        - id
        - policy_id
        - updated_by_user_id
      title: ActionApprovalRequest
      description: >-
        Model that holds the state of a request for an action to be taken with
        respect to a policy.

        Ex. if the policy is set to require approval, then we will have a
        request for approval.
    ActionApprovalState:
      type: string
      enum:
        - pending
        - approved
        - rejected
      title: ActionApprovalState
      description: Enum for policy approval states
    ApprovalAndPolicy:
      properties:
        approval:
          $ref: '#/components/schemas/ActionApprovalRequest'
        policy:
          $ref: '#/components/schemas/Policy'
        canonical_resource_name:
          type: string
          title: Canonical Resource Name
        integration_name:
          type: string
          title: Integration Name
        tool_name:
          type: string
          title: Tool Name
      type: object
      required:
        - approval
        - policy
        - canonical_resource_name
        - integration_name
        - tool_name
      title: ApprovalAndPolicy
      description: Approval and policy
    Attempt:
      properties:
        success:
          type: boolean
          title: Success
        error:
          anyOf:
            - type: string
            - type: 'null'
          title: Error
      type: object
      required:
        - success
      title: Attempt
      description: A single attempt at an action.
    AuditLog:
      properties:
        id:
          anyOf:
            - type: integer
            - type: 'null'
          title: Id
        policy_id:
          type: integer
          title: Policy Id
        action:
          type: string
          title: Action
        details:
          type: object
          title: Details
        performed_by:
          type: string
          title: Performed By
          default: system
        timestamp:
          type: string
          format: date-time
          title: Timestamp
      type: object
      required:
        - policy_id
        - action
      title: AuditLog
      description: Model for audit logging
    AuthenticationMethod:
      type: string
      enum:
        - propelauth
        - api_key
      title: AuthenticationMethod
    AuthenticationStatus:
      properties:
        credentials_provided:
          type: boolean
          title: Credentials Provided
        method:
          anyOf:
            - $ref: '#/components/schemas/AuthenticationMethod'
            - type: 'null'
        user_id:
          anyOf:
            - type: string
            - type: 'null'
          title: User Id
        is_authenticated:
          type: boolean
          title: Is Authenticated
      type: object
      required:
        - credentials_provided
        - is_authenticated
      title: AuthenticationStatus
    BasePolicy:
      properties:
        event_name:
          type: string
          title: Event Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        access_policy:
          $ref: '#/components/schemas/AccessPolicyType'
      type: object
      required:
        - event_name
        - access_policy
      title: BasePolicy
      description: Base model with shared policy fields
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    IngressConfig:
      properties:
        entryPoints:
          items:
            type: string
          type: array
          title: Entrypoints
        proxyDomain:
          type: string
          title: Proxydomain
        orgID:
          type: string
          title: Orgid
        orgRouteStrategy:
          type: string
          enum:
            - PathPrefix
            - Header
          title: Orgroutestrategy
          default: PathPrefix
        serverID:
          type: string
          title: Serverid
        serverRouteStrategy:
          type: string
          enum:
            - PathPrefix
            - Header
          title: Serverroutestrategy
          default: Header
        serverIsDefault:
          anyOf:
            - type: boolean
            - type: 'null'
          title: Serverisdefault
          default: false
        gatewayScheme:
          type: string
          title: Gatewayscheme
          default: http
      type: object
      required:
        - proxyDomain
        - orgID
        - serverID
      title: IngressConfig
    IntegrationAuthScheme:
      type: string
      enum:
        - token
        - oauth_1_0
        - oauth_2_0
      title: IntegrationAuthScheme
      description: Authentication schemes supported by server templates.
    IntegrationConfigDetails:
      properties:
        name:
          type: string
          title: Name
        configuration_state:
          $ref: '#/components/schemas/IntegrationConfigurationState'
        template:
          $ref: '#/components/schemas/IntegrationTemplate'
      type: object
      required:
        - name
        - configuration_state
        - template
      title: IntegrationConfigDetails
      description: >-
        General details about an integration. Meant to be surfaceable to a
        client.
    IntegrationConfigToolDetails:
      properties:
        name:
          type: string
          title: Name
        configuration_state:
          $ref: '#/components/schemas/IntegrationConfigurationState'
        tool_policies:
          additionalProperties:
            $ref: '#/components/schemas/BasePolicy'
          type: object
          title: Tool Policies
      type: object
      required:
        - name
        - configuration_state
        - tool_policies
      title: IntegrationConfigToolDetails
      description: Details about a tool for an integration.
    IntegrationConfigUpsertResult:
      properties:
        integration_config:
          $ref: '#/components/schemas/IntegrationConfiguration'
        state:
          $ref: '#/components/schemas/IntegrationConfigurationState'
      type: object
      required:
        - integration_config
        - state
      title: IntegrationConfigUpsertResult
      description: Attempt to create or update an integration.
    IntegrationConfiguration:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          anyOf:
            - type: integer
            - type: 'null'
          title: Id
        name:
          type: string
          title: Name
        org_id:
          type: string
          title: Org Id
        profile_id:
          type: string
          title: Profile Id
        template:
          $ref: '#/components/schemas/IntegrationTemplate'
        configuration_state:
          $ref: '#/components/schemas/IntegrationConfigurationState'
      type: object
      required:
        - name
        - org_id
        - profile_id
        - template
        - configuration_state
      title: IntegrationConfiguration
      description: >-
        Stores the configuration for an integration that should be maintained
        for a given resource owner.
    IntegrationConfigurationState:
      type: string
      enum:
        - agent_local
        - cloud_hosted_available
        - cloud_hosted_configured
      title: IntegrationConfigurationState
      description: >-
        The state of an integration from an account perspective (not runtime).

        To determine the runtime state, we will have to check the server
        configuration for

        the integration separately depending on our infrastucture selection.
    IntegrationDefaultPolicies:
      properties:
        tools:
          items:
            $ref: '#/components/schemas/BasePolicy'
          type: array
          title: Tools
          description: Policies for tools in this integration.
      type: object
      required:
        - tools
      title: IntegrationDefaultPolicies
      description: Default policies for an integration.
    IntegrationOAuthAuthorizer:
      type: string
      enum:
        - google
        - meta
      title: IntegrationOAuthAuthorizer
    IntegrationSecret:
      properties:
        name:
          type: string
          title: Name
        generation_link:
          anyOf:
            - type: string
            - type: 'null'
          title: Generation Link
        value:
          anyOf:
            - type: string
            - type: 'null'
          title: Value
      type: object
      required:
        - name
      title: IntegrationSecret
      description: Represents a secret required by a server template.
    IntegrationTemplate:
      properties:
        version:
          type: string
          title: Version
          description: The version of the integration template.
        name:
          type: string
          title: Name
        repository:
          type: string
          title: Repository
        sha:
          type: string
          title: Sha
        auth_scheme:
          anyOf:
            - $ref: '#/components/schemas/IntegrationAuthScheme'
            - type: 'null'
        oauth_authorizer:
          anyOf:
            - $ref: '#/components/schemas/IntegrationOAuthAuthorizer'
            - type: 'null'
        args:
          oneOf:
            - $ref: '#/components/schemas/MCPIntegrationArgs'
          title: Args
          discriminator:
            propertyName: type
            mapping:
              mcp: '#/components/schemas/MCPIntegrationArgs'
        secrets:
          anyOf:
            - items:
                $ref: '#/components/schemas/IntegrationSecret'
              type: array
            - type: 'null'
          title: Secrets
        default_policies:
          $ref: '#/components/schemas/IntegrationDefaultPolicies'
      type: object
      required:
        - version
        - name
        - repository
        - sha
        - args
        - default_policies
      title: IntegrationTemplate
      description: >-
        Class representation of the server templates that we support. This
        matches the structure

        of server templates under resources/integrations/templates/*
    IntegrationUpsertAttempt:
      properties:
        success:
          type: boolean
          title: Success
        error:
          anyOf:
            - type: string
            - type: 'null'
          title: Error
        config:
          $ref: '#/components/schemas/IntegrationConfigUpsertResult'
        runtime:
          anyOf:
            - {}
            - type: 'null'
          title: Runtime
      type: object
      required:
        - success
        - config
      title: IntegrationUpsertAttempt
    KindMetadata:
      type: object
    LauncherConfig:
      properties:
        configMapName:
          type: string
          title: Configmapname
        mountPath:
          type: string
          title: Mountpath
      type: object
      required:
        - configMapName
        - mountPath
      title: LauncherConfig
    MCPIntegrationArgs:
      properties:
        type:
          type: string
          const: mcp
          title: Type
        command:
          type: string
          title: Command
        args:
          anyOf:
            - items:
                type: string
              type: array
            - type: 'null'
          title: Args
      type: object
      required:
        - type
        - command
      title: MCPIntegrationArgs
      description: >-
        Arguments specifically for an integration that is powered by an MCP
        server.
    MCPServerConfig:
      properties:
        name:
          type: string
          title: Name
        image:
          type: string
          title: Image
          default: registry.onegrep.dev/onegrep/mcp-host:latest
        git_repo_url:
          anyOf:
            - type: string
            - type: 'null'
          title: Git Repo Url
        git_branch:
          anyOf:
            - type: string
            - type: 'null'
          title: Git Branch
          default: main
        command:
          type: string
          title: Command
        args:
          items:
            type: string
          type: array
          title: Args
        env_vars:
          additionalProperties:
            type: string
          type: object
          title: Env Vars
      type: object
      required:
        - name
        - command
        - args
        - env_vars
      title: MCPServerConfig
    Organization:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          title: Id
        owner_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Owner Id
        created_by_user_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Created By User Id
      type: object
      required:
        - id
      title: Organization
    Policy:
      properties:
        event_name:
          type: string
          title: Event Name
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
        access_policy:
          $ref: '#/components/schemas/AccessPolicyType'
        id:
          anyOf:
            - type: integer
            - type: 'null'
          title: Id
        canonical_resource_name:
          type: string
          title: Canonical Resource Name
        organization_id:
          type: string
          title: Organization Id
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
      type: object
      required:
        - event_name
        - access_policy
        - canonical_resource_name
        - organization_id
      title: Policy
      description: Policy model that works with both SQL and in-memory storage
    PolicyCheckResult:
      properties:
        approved:
          type: boolean
          title: Approved
      type: object
      required:
        - approved
      title: PolicyCheckResult
      description: Result of a policy check
    RemoteClientConfig:
      properties:
        org_id:
          type: string
          title: Org Id
          example: org-123
        name:
          type: string
          title: Name
          example: my-server
        display_name:
          type: string
          title: Display Name
          example: My Server
        description:
          anyOf:
            - type: string
            - type: 'null'
          title: Description
          example: My Server Description
        ready:
          type: boolean
          title: Ready
          default: false
          example: true
        endpoint:
          type: string
          title: Endpoint
          example: https://gateway.onegrep.dev
        required_headers:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: 'null'
          title: Required Headers
          example:
            X-MCP-MC: my-server
      type: object
      required:
        - org_id
        - name
        - display_name
      title: RemoteClientConfig
    Server:
      properties:
        kind:
          type: string
          const: Server
          title: Kind
          default: Server
        metadata:
          $ref: '#/components/schemas/KindMetadata'
        spec:
          $ref: '#/components/schemas/ServerSpec'
        status:
          anyOf:
            - type: object
            - type: 'null'
          title: Status
        apiVersion:
          type: string
          title: Apiversion
          readOnly: true
      additionalProperties: true
      type: object
      required:
        - metadata
        - spec
        - apiVersion
      title: Server
    ServerSpec:
      properties:
        orgID:
          type: string
          title: Orgid
        image:
          type: string
          title: Image
        pullPolicy:
          type: string
          title: Pullpolicy
          default: IfNotPresent
        port:
          type: integer
          title: Port
          default: 8000
        displayName:
          anyOf:
            - type: string
            - type: 'null'
          title: Displayname
        envFromSources:
          anyOf:
            - items:
                type: object
              type: array
            - type: 'null'
          title: Envfromsources
        volumes:
          anyOf:
            - items:
                type: object
              type: array
            - type: 'null'
          title: Volumes
        volumeMounts:
          anyOf:
            - items:
                type: object
              type: array
            - type: 'null'
          title: Volumemounts
        launcherConfig:
          anyOf:
            - $ref: '#/components/schemas/LauncherConfig'
            - type: 'null'
        ingressConfig:
          anyOf:
            - $ref: '#/components/schemas/IngressConfig'
            - type: 'null'
      type: object
      required:
        - orgID
        - image
      title: ServerSpec
    TraefikIngressRoute:
      properties:
        kind:
          type: string
          const: IngressRoute
          title: Kind
          default: IngressRoute
        metadata:
          $ref: '#/components/schemas/KindMetadata'
        spec:
          $ref: '#/components/schemas/IngressConfig'
        status:
          type: object
          title: Status
        apiVersion:
          type: string
          title: Apiversion
          readOnly: true
      additionalProperties: true
      type: object
      required:
        - metadata
        - spec
        - status
        - apiVersion
      title: TraefikIngressRoute
    UserAccount:
      properties:
        created_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Created At
        updated_at:
          anyOf:
            - type: string
              format: date-time
            - type: 'null'
          title: Updated At
        id:
          type: string
          title: Id
        belongs_to_organization_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Belongs To Organization Id
        api_key:
          type: string
          title: Api Key
      type: object
      required:
        - id
        - api_key
      title: UserAccount
      description: Model for storing user information including their API key
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError
  securitySchemes:
    APIKeyHeader:
      type: apiKey
      in: header
      name: X-ONEGREP-API-KEY
    HTTPBearer:
      type: http
      scheme: bearer
